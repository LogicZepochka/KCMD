libsNames = ["kernel_router.so",
    "init.so",
    "kernel_module.so",
    "net.so",
    "aptclient.so",
    "crypto.so",
    "blockchain.so",
    "metaxploit.so",
    "libhttp.so",
    "libsmtp.so",
    "libsql.so",
    "libftp.so",
    "libssh.so",
    "libchat.so",
    "librshell.so",
    "libcam.so",
    "librepository.so"]
ExploitDB = {}
ExploitDB.libs = {}

ExploitDB.ready = true
ExploitDB.dbFile = null

ExploitDB.Init = function()
	for name in libsNames
        self.libs[name] = {}
    end for
	
    dbFile = get_shell.host_computer.File(Program.path+Program.settings["databasePath"])
    if(dbFile == null) then
        UI.printWarning("Не удалось инициалировать базу данных эксплойтов: не найден файл данных")
        return 0;
    end if
    self.dbFile = dbFile
    self.ready = true
    self.LoadDB
end function


ExploitDB.LoadDB = function()
    if not self.ready then return 0
    str = self.dbFile.get_content
	UI.printWarning("В данный момент сохранение и загрузка данных из базы данных не поддерживается","EDB-Warning")
end function

ExploitDB.SaveDB = function()
    if not self.ready then return 0
    UI.printWarning("В данный момент сохранение и загрузка данных из базы данных не поддерживается","EDB-Warning")
end function

ExploitDB.Request = function(lib,ver)
    if not self.ready then return 0
    if not hasIndex(self.libs[lib],ver) then
        UI.printWarning("Нет информации о библиотеке <b>"+lib+"</b> версии <b>"+ver+"</b>")
        return null
    end if
    UI.printWarning("Получена информация из базы данных | <b>"+lib+"</b> версии <b>"+ver+"</b>")
    return self.libs[lib][ver]
end function

ExploitDB.AddNew = function(lib,ver,mem,word)
    if not self.ready then return 0
    UI.print("Обновляем данные: "+lib+" | Вер: "+ver,"EDB")
	
    if not hasIndex(self.libs[lib],ver) then
		UI.print("Новая информация о библиотеке <b>"+lib+"</b> добавлена","EDB")
        self.libs[lib][ver] = {}
    end if
    if not hasIndex(self.libs[lib][ver],mem) then
		UI.print("Новая память <b>"+lib+"</b> добавлена","EDB")
        self.libs[lib][ver][mem] = []
    end if
    self.libs[lib][ver][mem].push(word)
end function